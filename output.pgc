#include	<stdio.h>

EXEC SQL BEGIN DECLARE SECTION;
struct
{
	int	mMonth;
	char	prod[21];
	int	mYear;
	int	min_quant_1;
	int	cnt_quant_2;
	int	max_quant_1;
	int	sum_quant_3;
} mf_structure[500]; 


struct
{
	char	*cust;
	char	*prod;
	int    mDay;
	int    mMonth;
	int	 mYear;
	char	*state;
	int	 quant;
} 	sale_rec;

EXEC SQL END DECLARE SECTION;
EXEC SQL INCLUDE sqlca; 
 
 
 
void	output_record(); 

int main(int argc, char* argv[])
{ 


	int index = 0;
	int count = 0;
	int sum = 0;
	EXEC SQL CONNECT TO jrodrig9 USER jrodrig9 IDENTIFIED BY Johny10353976;
	EXEC SQL WHENEVER sqlerror sqlprint;


	printf(" mMonth	| prod	| mYear	| min_quant_1	| cnt_quant_2	| max_quant_1	| sum_quant_3	| \n");
 
 

	EXEC SQL DECLARE mycursor CURSOR FOR SELECT DISTINCT prod, month, year FROM sales WHERE year=1997;
	EXEC SQL SET TRANSACTION read only;
	EXEC SQL OPEN mycursor;
	EXEC SQL FETCH FROM mycursor INTO :mf_structure[index].prod, :mf_structure[index].mMonth, :mf_structure[index].mYear;
	while (sqlca.sqlcode == 0)
	{
		mf_structure[index].min_quant_1 = 0;
		mf_structure[index].cnt_quant_2 = 0;
		mf_structure[index].max_quant_1 = 0;
		mf_structure[index].sum_quant_3 = 0;
		index++;
		EXEC SQL FETCH FROM mycursor INTO :mf_structure[index].prod, :mf_structure[index].mMonth, :mf_structure[index].mYear;
	}
	EXEC SQL CLOSE mycursor;


	//A WHILE LOOP FOR VAR 1
	count = 0;
	sum = 0;
	EXEC SQL DECLARE mycursor1 CURSOR FOR SELECT * FROM sales;
	EXEC SQL SET TRANSACTION read only;
	EXEC SQL OPEN mycursor1;
	EXEC SQL FETCH FROM mycursor1 INTO :sale_rec;
	while (sqlca.sqlcode == 0)
	{
		index = 0;
		while (index <= 500)
		{
			if (strcmp(mf_structure[index].prod, "Eggs") == 0 && sale_rec.mYear == 1997)
			{
					if ( mf_structure[index].min_quant_1 == 0)
					{
						mf_structure[index].min_quant_1= sale_rec.quant;
					}
					if ( sale_rec.quant < mf_structure[index].min_quant_1)
					{
						mf_structure[index].min_quant_1= sale_rec.quant;
					}
					if ( sale_rec.quant > mf_structure[index].max_quant_1)
					{
						mf_structure[index].max_quant_1 = sale_rec.quant;
					}
			}
			index++;
		}
		EXEC SQL FETCH FROM mycursor1 INTO :sale_rec;
	}
	EXEC SQL CLOSE mycursor1;




	//A WHILE LOOP FOR VAR 2
	count = 0;
	sum = 0;
	EXEC SQL DECLARE mycursor2 CURSOR FOR SELECT * FROM sales;
	EXEC SQL SET TRANSACTION read only;
	EXEC SQL OPEN mycursor2;
	EXEC SQL FETCH FROM mycursor2 INTO :sale_rec;
	while (sqlca.sqlcode == 0)
	{
		index = 0;
		while (index <= 500)
		{
			if (strcmp(mf_structure[index].prod, "Pepsi") == 0)
			{
					mf_structure[index].cnt_quant_2++;
			}
			index++;
		}
		EXEC SQL FETCH FROM mycursor2 INTO :sale_rec;
	}
	EXEC SQL CLOSE mycursor2;




	//A WHILE LOOP FOR VAR 3
	count = 0;
	sum = 0;
	EXEC SQL DECLARE mycursor3 CURSOR FOR SELECT * FROM sales;
	EXEC SQL SET TRANSACTION read only;
	EXEC SQL OPEN mycursor3;
	EXEC SQL FETCH FROM mycursor3 INTO :sale_rec;
	while (sqlca.sqlcode == 0)
	{
		index = 0;
		while (index <= 500)
		{
			if (strcmp(mf_structure[index].prod, "Eggs") == 0)
			{
					mf_structure[index].sum_quant_3 = mf_structure[index].sum_quant_3 + sale_rec.quant;
			}
			index++;
		}
		EXEC SQL FETCH FROM mycursor3 INTO :sale_rec;
	}
	EXEC SQL CLOSE mycursor3;




	output_record();
	return 0;
}

void output_record()
{
	int i =0;
	for (; i < 500; i++) 
	{
	if (mf_structure[i].mMonth != 0)
	{
		printf(" %-5d | ",mf_structure[i].mMonth);
		printf(" %-5s | ",mf_structure[i].prod);
		printf(" %-5d | ",mf_structure[i].mYear);
		printf(" %-5d | ",mf_structure[i].min_quant_1);
		printf(" %-5d | ",mf_structure[i].cnt_quant_2);
		printf(" %-5d | ",mf_structure[i].max_quant_1);
		printf(" %-5d | ",mf_structure[i].sum_quant_3);
		printf("\n");
	}

	}
}
